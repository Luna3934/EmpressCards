name: Desktop Release

on:
  push:
    tags: ['v*.*.*']             # e.g. v0.2.0
  workflow_dispatch:

permissions:
  contents: read                 # default; publish job sets write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13]   # macOS pinned for stability
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - run: npm ci
      - run: npm run build

      # üü¶ Windows: build MSI + updater artifacts
      - name: Build Tauri (Windows)
        if: runner.os == 'Windows'
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          bundles: msi updater
          args: --verbose

      # üçè macOS: build updater only (skip DMG to avoid bundle_dmg.sh)
      - name: Build Tauri (macOS updater only)
        if: runner.os == 'macOS'
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_BUNDLER_DEBUG: "1"
        with:
          bundles: updater
          args: --verbose

      # üì¶ Stash outputs for the publish job
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ runner.os }}
          path: src-tauri/target/release/bundle/**/*
          if-no-files-found: warn

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write            # needed to create/update Release & upload
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List files (debug)
        run: ls -R dist

      # üè∑Ô∏è Create/update the Release and upload everything the updater needs
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}             # v0.2.0
          name: Empress Card Binder ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            # updater manifest (all platforms read this)
            dist/**/bundle/**/latest.json

            # macOS updater payload
            dist/**/bundle/macos/*.app.tar.gz
            dist/**/bundle/macos/*.app.tar.gz.sig

            # Windows updater payload
            dist/**/bundle/windows/*.msi.zip
            dist/**/bundle/windows/*.msi.zip.sig

            # Linux updater payload (if/when you build Linux)
            dist/**/bundle/linux/*.AppImage.tar.gz
            dist/**/bundle/linux/*.AppImage.tar.gz.sig

            # Optional human installers (nice-to-have, not needed for auto-update)
            dist/**/bundle/**/Empire*.msi
            dist/**/bundle/**/Empire*.dmg
            dist/**/bundle/**/Empire*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # üîÅ Optional: retry in case of transient upload hiccups
      - name: Retry missed uploads (best-effort)
        if: failure()
        run: |
          set -e
          for i in 1 2 3 4; do
            gh release upload "${GITHUB_REF_NAME}" dist/**/bundle/**/* --clobber && exit 0 || sleep $((i*10))
          done
          echo "Upload still failing after retries" && exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
