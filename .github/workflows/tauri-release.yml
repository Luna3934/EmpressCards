name: Desktop Release

on:
  push:
    tags: ['v*.*.*']       # e.g. v0.2.0
  workflow_dispatch:

permissions:
  contents: read           # publish job sets write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13]   # pin mac for stability
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List files (debug)
        run: ls -R dist

      # NEW: merge all platform manifests into one latest.json
      - name: Merge updater manifests
        shell: node
        run: |
          const fs = require('fs');
          const path = require('path');

          // find every latest.json we downloaded from the matrix
          function walk(dir, out=[]) {
            for (const e of fs.readdirSync(dir, { withFileTypes: true })) {
              const p = path.join(dir, e.name);
              if (e.isDirectory()) walk(p, out);
              else if (e.isFile() && e.name === 'latest.json') out.push(p);
            }
            return out;
          }

          const files = walk('dist');
          if (!files.length) throw new Error('No latest.json files found under dist/**');

          const merged = { version: '', notes: '', platforms: {} };
          for (const f of files) {
            const j = JSON.parse(fs.readFileSync(f, 'utf8'));
            if (!merged.version) merged.version = j.version;
            if (!merged.notes && j.notes) merged.notes = j.notes;
            Object.assign(merged.platforms, j.platforms || {});
          }

          const outPath = path.join('dist', 'latest.json');
          fs.writeFileSync(outPath, JSON.stringify(merged, null, 2));
          console.log('Merged platforms:', Object.keys(merged.platforms));

      # Publish GitHub Release (upload merged latest.json + payloads)
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Empress Card Binder ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            # merged updater manifest (must be single file)
            dist/latest.json

            # macOS updater payload
            dist/**/bundle/macos/*.app.tar.gz
            dist/**/bundle/macos/*.app.tar.gz.sig

            # Windows updater payload
            dist/**/bundle/windows/*.msi.zip
            dist/**/bundle/windows/*.msi.zip.sig

            # Optional human installers
            dist/**/bundle/**/Empire*.msi
            dist/**/bundle/**/Empire*.dmg
            dist/**/bundle/**/Empire*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}